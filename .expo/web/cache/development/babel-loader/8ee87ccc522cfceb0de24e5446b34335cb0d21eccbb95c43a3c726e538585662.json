{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"M:\\\\New_Ecom_Cust_App\\\\NareshEcommerce\\\\screens\\\\ResetPassword.js\",\n  _this = this;\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport axios from 'axios';\nimport URL_path from '../URL';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ResetPassword = function ResetPassword(_ref) {\n  var route = _ref.route;\n  var token = route.params.token;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    newPassword = _useState2[0],\n    setNewPassword = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    confirmPassword = _useState4[0],\n    setConfirmPassword = _useState4[1];\n  var handleResetPassword = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (newPassword !== confirmPassword) {\n        Alert.alert('Error', 'Passwords do not match.');\n        return;\n      }\n      try {\n        yield axios.post(`${URL_path}/resetpassword`, {\n          token: token,\n          newPassword: newPassword\n        });\n        Alert.alert('Success', 'Your password has been reset successfully.');\n      } catch (error) {\n        var _error$response, _error$response$data;\n        Alert.alert('Error', ((_error$response = error.response) == null ? void 0 : (_error$response$data = _error$response.data) == null ? void 0 : _error$response$data.message) || 'Something went wrong.');\n      }\n    });\n    return function handleResetPassword() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, _this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"New Password\",\n      value: newPassword,\n      onChangeText: setNewPassword,\n      secureTextEntry: true,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, _this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Confirm Password\",\n      value: confirmPassword,\n      onChangeText: setConfirmPassword,\n      secureTextEntry: true,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, _this), _jsxDEV(Button, {\n      title: \"Reset Password\",\n      onPress: handleResetPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, _this);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20,\n    backgroundColor: '#f9f9f9'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 8,\n    padding: 10,\n    marginBottom: 20\n  }\n});\nexport default ResetPassword;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","Alert","axios","URL_path","jsxDEV","_jsxDEV","ResetPassword","_ref","route","token","params","_useState","_useState2","_slicedToArray","newPassword","setNewPassword","_useState3","_useState4","confirmPassword","setConfirmPassword","handleResetPassword","_ref2","_asyncToGenerator","alert","post","error","_error$response","_error$response$data","response","data","message","apply","arguments","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_this","input","placeholder","value","onChangeText","secureTextEntry","required","onPress","create","flex","justifyContent","padding","backgroundColor","fontSize","fontWeight","marginBottom","textAlign","borderWidth","borderColor","borderRadius"],"sources":["M:/New_Ecom_Cust_App/NareshEcommerce/screens/ResetPassword.js"],"sourcesContent":["// ResetPassword.js\r\nimport React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button, StyleSheet, Alert } from 'react-native';\r\nimport axios from 'axios';\r\nimport URL_path from '../URL';\r\n\r\nconst ResetPassword = ({ route }) => {\r\n  const { token } = route.params; // Get the reset token from the navigation params\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const handleResetPassword = async () => {\r\n    if (newPassword !== confirmPassword) {\r\n      Alert.alert('Error', 'Passwords do not match.');\r\n      return;\r\n    }\r\n    try {\r\n      await axios.post(`${URL_path}/resetpassword`, { token, newPassword });\r\n      Alert.alert('Success', 'Your password has been reset successfully.');\r\n    } catch (error) {\r\n      Alert.alert('Error', error.response?.data?.message || 'Something went wrong.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Reset Password</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"New Password\"\r\n        value={newPassword}\r\n        onChangeText={setNewPassword}\r\n        secureTextEntry\r\n        required\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Confirm Password\"\r\n        value={confirmPassword}\r\n        onChangeText={setConfirmPassword}\r\n        secureTextEntry\r\n        required\r\n      />\r\n      <Button title=\"Reset Password\" onPress={handleResetPassword} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n    backgroundColor: '#f9f9f9',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: '#ddd',\r\n    borderRadius: 8,\r\n    padding: 10,\r\n    marginBottom: 20,\r\n  },\r\n});\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}